plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.smartcane'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// --- Spring ---
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient

	// --- DB ---
	runtimeOnly 'com.mysql:mysql-connector-j'

	// DB 마이그레이션
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'   // 👈 추가 (필수)

	// --- OpenAPI(UI: /swagger-ui) ---
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// --- Lombok ---

	implementation 'org.projectlombok:lombok'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// --- MapStruct (DTO <-> Entity) ---
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	// Lombok + MapStruct 함께 사용할 때 권장 바인딩
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// --- JWT (JJWT 0.12.x) ---
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.12.6' // JSON 직렬화

	implementation "com.nimbusds:nimbus-jose-jwt:9.37"



	// --- Dev & Test ---
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

/**
 * MapStruct 생성기 옵션
 *  - 기본 componentModel=spring (스프링 빈으로 주입)
 *  - 생성 타임스탬프/주석 억제(빌드 결과 깔끔)
 */
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.compilerArgs += [
			'-Amapstruct.defaultComponentModel=spring',
			'-Amapstruct.suppressGeneratorTimestamp=true',
			'-Amapstruct.suppressGeneratorVersionInfoComment=true'
	]
}
